{"version":3,"sources":["accordions.js","modal.js","script.js","tabs.js","_global.js"],"names":["initAccordions","document","querySelectorAll","forEach","accordionItemHeader","addEventListener","event","currentlyActiveAccordionItemHeader","querySelector","classList","toggle","nextElementSibling","style","maxHeight","accordionItemBody","contains","scrollHeight","initModal","modal","modalOverlay","place","e","add","setAttribute","target","getAttribute","remove","modalSuccess","console","log","app","initTabs","tab","header","tabContent","hideTabContent","a","i","length","disableTabState","updateTabState","b","global","init","dates","setDate","data","createData","checkBooked","createTabs","blockOutOfDate","bookPlace","today","Date","nextDate","getDate","day","month","getMonth","formattedDate","toString","padStart","push","createdData","sessionsTemp","j","placesAmount","sessionTime","sessionId","replace","places","k","placeNum","placeBooked","placeByer","session","sessionID","sessionPlaces","date","sessions","tabsContainer","tabsContentContainer","tabsForDelete","tabs","tabsContent","checked","createTimes","innerHTML","el","insertAdjacentHTML","timeAcc","split","createPlaces","placesArr","time","name","booked","setCookies","cookieStorage","getCookie","newBook","arr","cookie","JSON","stringify","parsed","parse","matches","match","RegExp","decodeURIComponent","undefined","submitBtn","input","value","setTimeout","cookieStorageParsed","timeHours","getHours"],"mappings":"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","file":"all.js","sourcesContent":["function initAccordions() {\r\n    const accordionItemHeaders = document.querySelectorAll(\".accordion-item-header\");\r\n\r\n    accordionItemHeaders.forEach(accordionItemHeader => {\r\n        accordionItemHeader.addEventListener(\"click\", event => {\r\n\r\n              const currentlyActiveAccordionItemHeader = document.querySelector(\".accordion-item-header.active\");\r\n            if (currentlyActiveAccordionItemHeader && currentlyActiveAccordionItemHeader !== accordionItemHeader) {\r\n                currentlyActiveAccordionItemHeader.classList.toggle(\"active\");\r\n                currentlyActiveAccordionItemHeader.nextElementSibling.style.maxHeight = 0;\r\n            }\r\n\r\n            accordionItemHeader.classList.toggle(\"active\");\r\n            const accordionItemBody = accordionItemHeader.nextElementSibling;\r\n            if (accordionItemHeader.classList.contains(\"active\")) {\r\n                accordionItemBody.style.maxHeight = accordionItemBody.scrollHeight + \"px\";\r\n            }\r\n            else {\r\n                accordionItemBody.style.maxHeight = 0;\r\n            }\r\n\r\n        });\r\n    });\r\n}\r\n\r\n","function initModal() {\r\n    const modal = document.querySelector('.modal')\r\n    const modalOverlay = modal.querySelector('.modal__overlay')\r\n\r\n    const places = document.querySelectorAll('.place:not(.booked)')\r\n\r\n    places.forEach(place => {\r\n        place.addEventListener('click', (e)=>{\r\n            modal.classList.add('active')\r\n            modal.setAttribute('data-day', e.target.getAttribute('data-date'))\r\n            modal.setAttribute('data-place-num', e.target.getAttribute('data-place-num'))\r\n            modal.setAttribute('data-time', e.target.getAttribute('data-time'))\r\n        })\r\n    })\r\n\r\n    modalOverlay.addEventListener('click', ()=>{\r\n        modal.classList.remove('active')\r\n    })\r\n\r\n    const modalSuccess = document.querySelector('.modal--success')\r\n    const modalOverlaySuccess = modalSuccess.querySelector('.modal__overlay')\r\n\r\n    modalOverlaySuccess.addEventListener('click', ()=>{\r\n        modalSuccess.classList.remove('active')\r\n    })\r\n}","console.log(\"Load script.js\");\n\nvar app = {};\n","function initTabs() {\r\n\r\n    let tab = document.querySelectorAll('.header-tab'),\r\n        header = document.querySelector('.header'),\r\n        tabContent = document.querySelectorAll('.tabcontent');\r\n\r\n    function hideTabContent(a) {\r\n        for (let i = a; i < tabContent.length; i++) {\r\n            tabContent[i].classList.remove('show');\r\n            tabContent[i].classList.add('hide');\r\n        }\r\n    }\r\n\r\n    hideTabContent(1);\r\n\r\n    function showTabContent(b) {\r\n        if (tabContent[b].classList.contains('hide')) {\r\n            tabContent[b].classList.remove('hide');\r\n            tabContent[b].classList.add('show');\r\n        }\r\n    }\r\n\r\n    function disableTabState() {\r\n        for (let i = 0; i < tab.length; i++) {\r\n            tab[i].classList.remove('active');\r\n            tab[i].classList.add('disable');\r\n        }\r\n    }\r\n\r\n    function updateTabState(b) {\r\n        if (tab[b].classList.contains('disable')) {\r\n            tab[b].classList.remove('disable');\r\n            tab[b].classList.add('active');\r\n        }\r\n    }\r\n\r\n    header.addEventListener('click', function(event) {\r\n        let target = event.target;\r\n\r\n        if (target && target.classList.contains('header-tab')) {\r\n            for(let i = 0; i < tab.length; i++) {\r\n                if (target == tab[i]) {\r\n                    hideTabContent(0);\r\n                    showTabContent(i);\r\n                    disableTabState()\r\n                    updateTabState(i)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n}","// Global\napp.global = {\n    init: function () {\n        const dates = app.global.setDate()\n        let data = app.global.createData(dates);\n        app.global.checkBooked(data)\n        app.global.createTabs(data)\n        app.global.blockOutOfDate()\n        initTabs()\n        initAccordions()\n        initModal()\n        app.global.bookPlace(data)\n    },\n\n    setDate: function () {\n        const today = new Date();\n        const dates = [];\n\n        for (let i = 0; i < 7; i++) {\n            const nextDate = new Date(today);\n            nextDate.setDate(today.getDate() + i);\n\n            const day = nextDate.getDate();\n            const month = nextDate.getMonth() + 1;\n            const formattedDate = `${day.toString().padStart(2, '0')}.${month.toString().padStart(2, '0')}`;\n\n            dates.push(formattedDate);\n        }\n\n        return dates;\n    },\n\n    createData: function (dates) {\n        let createdData = []\n\n        for (let i = 0, length = dates.length; i < length; i++) {\n            let sessionsTemp = []\n            for (let j = 0; j < 6; j++) {\n                let sessionTime = 10 + (j * 2)\n                let sessionId = dates[i].replace('.', '') + sessionTime\n                let places = []\n                let placesAmount;\n\n                if (sessionTime == 10 || sessionTime == 20) {\n                    placesAmount = 20\n                } else {\n                    placesAmount = 25\n                }\n\n                for (let k = 0; k < placesAmount; k++) {\n                    let place = {\n                        placeNum: k + 1,\n                        placeBooked: false,\n                        placeByer: ''\n                    }\n\n                    places.push(place)\n                }\n\n                let session = {\n                    sessionID: sessionId,\n                    sessionTime: `${sessionTime}:00`,\n                    sessionPlaces: places\n                }\n                sessionsTemp.push(session)\n            }\n\n            let day = {\n                date: dates[i],\n                sessions: sessionsTemp\n            }\n            createdData.push(day)\n        }\n\n        return createdData\n    },\n\n    createTabs: function (data) {\n        const tabsContainer = document.querySelector('.container .info .header')\n        const tabsContentContainer = document.querySelector('.container .info')\n        const tabsForDelete = document.querySelectorAll('.tabcontent')\n        let tabs = ''\n        let tabsContent = ''\n\n        for (let i = 0, length = data.length; i < length; i++) {\n            checked = ''\n            i == 0 ? checked = 'active' : checked = 'dusabled'\n            tabs += `\n                <div class=\"header-tab ${checked}\">${data[i].date}</div>\n            `\n\n            tabsContent += `\n                <div class=\"tabcontent\">\n                    <div class=\"description\">\n                        <h3>Tickets for ${data[i].date}</h3>\n                        ${app.global.createTimes(data[i].sessions, data[i].date)}\n                    </div>\n                </div>\n            `\n        }\n\n        tabsContainer.innerHTML = ''\n        tabsForDelete.forEach(el => el.remove())\n        tabsContainer.insertAdjacentHTML('afterbegin', tabs)\n        tabsContentContainer.insertAdjacentHTML('beforeend', tabsContent)\n    },\n\n    createTimes: function (sessions, date) {\n        let timeAcc = '';\n\n        for (let i = 0, length = sessions.length; i < length; i++) {\n            timeAcc += `\n                <div class=\"accordion\" data-time=\"${sessions[i].sessionTime.split(':')[0]}\">\n                    <div class=\"accordion-item\">\n                        <div class=\"accordion-item-header\">\n                            ${sessions[i].sessionTime}\n                        </div>\n                        <div class=\"accordion-item-body\">\n                            <div class=\"accordion-item-body-content\">\n                                ${app.global.createPlaces(sessions[i].sessionPlaces, date, sessions[i].sessionTime)}    \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            `\n        }\n\n        return timeAcc\n    },\n\n    createPlaces: function (placesArr, date, time, name) {\n        let places = ``\n\n        for (let i = 0, length = placesArr.length; i < length; i++) {\n            booked = ''\n            placesArr[i].placeBooked ? booked = 'booked' : booked = ''\n            places += `\n                <div class=\"place ${booked}\" id=\"place-${placesArr[i].placeNum}\" data-date=\"${date}\" data-time=\"${time}\" data-place-num=\"${placesArr[i].placeNum}\">\n                    ${placesArr[i].placeNum}\n                </div>\n            `\n        }\n\n        return places;\n    },\n\n    setCookies: function (date, time, place, name) {\n        let cookieStorage = app.global.getCookie('data')\n        let newBook = {\n            date: date,\n            time: time,\n            place: place,\n            name: name\n        }\n\n        if (typeof cookieStorage == \"undefined\") {\n            let arr = [newBook]\n            document.cookie = 'data=' + JSON.stringify(arr);\n        } else {\n            let parsed = JSON.parse(cookieStorage)\n\n            parsed.push(newBook)\n            document.cookie = 'data=' + JSON.stringify(parsed);\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    bookPlace: function (data) {\n        const modal = document.querySelector('.modal:not(.modal-success)')\n        const submitBtn = modal.querySelector('#modal-btn')\n        const input = modal.querySelector('input')\n\n        const modalSuccess = document.querySelector('.modal--success')\n\n        submitBtn.addEventListener('click', () => {\n            let date = modal.getAttribute('data-day'),\n                time = modal.getAttribute('data-time'),\n                place = modal.getAttribute('data-place-num'),\n                name = input.value;\n\n            input.value = ''\n\n            modal.classList.remove('active')\n\n            app.global.setCookies(date, time, place, name)\n            app.global.init()\n\n            modalSuccess.classList.add('active')\n            setTimeout(()=>{\n                modalSuccess.classList.remove('active')\n            }, 2000)\n        })\n    },\n\n    checkBooked: function(data){\n        let cookieStorage = app.global.getCookie('data')\n\n        if (typeof cookieStorage != \"undefined\") {\n            let cookieStorageParsed = JSON.parse(cookieStorage)\n            if(cookieStorageParsed.length > 0){\n                cookieStorageParsed.forEach(value => {\n                    data.forEach(el => {\n                        if(el.date == value.date){\n                            el.sessions.forEach(session => {\n                                if(session.sessionTime == value.time){\n                                    session.sessionPlaces.forEach(place => {\n                                        if(place.placeNum == value.place){\n                                            place.placeBooked = true\n                                            place.placeByer = value.name\n                                        }\n                                    })\n                                }\n                            })\n                        }\n                    })\n                })\n            }\n        }\n    },\n\n    blockOutOfDate: function(date){\n        const timeHours = new Date().getHours()\n\n        const todayTab = document.querySelector('.tabcontent')\n        const times = todayTab.querySelectorAll('.accordion')\n\n        times.forEach(el => {\n            if(el.getAttribute('data-time') <= timeHours){\n                el.classList.add('out-of-time')\n            }\n        })\n    }\n}\n\napp.global.init();"]}